import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import { Octokit } from "octokit";
const inter = Inter({ subsets: ["latin"] });
import { useEffect, useState } from "react";
export default function Home() {
	const [user, setUser] = useState("");
	const [events, setEvents] = useState([]);
	const [gitHubScore, setGitHubScore] = useState(0);
	const handleSubmit = (event) => {
		event.preventDefault();
		if (!user) return;
		setUser("");
		setGitHubScore(0);
		const octokit = new Octokit({
			auth: process.env.API_KEY,
		});

		octokit
			.request(`GET /users/${user}/events/public`)
			.then((response) => setEvents(response.data))
			.catch((error) => console.error(error));
	};
	useEffect(() => {
		if (!events.length > 0 || gitHubScore !== 0) return;
		for (let i = 0; i < events.length; i++) {
			switch (events[i].type) {
				case "PushEvent":
					setGitHubScore((prevScore) => prevScore + 5);
					break;
				case "CreateEvent":
					setGitHubScore((prevScore) => prevScore + 4);
					break;
				case "IssuesEvent":
					setGitHubScore((prevScore) => prevScore + 3);
					break;
				case "CommitEvent":
					setGitHubScore((prevScore) => prevScore + 2);
					break;
				default:
					setGitHubScore((prevScore) => prevScore + 1);
					break;
			}
		}
	}, [events]);

	return (
		<>
			<Head>
				<title>Create Next App</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className="flex items-center justify-center  gap-y-12 flex-col h-screen">
				<h1 className="text-6xl font-bold">Get your GitHub score!</h1>
				<form
					className="w-full flex items-center justify-center"
					onSubmit={(e) => handleSubmit(e)}
				>
					<input
						className="border w-2/4 rounded-tl rounded-bl pl-4 py-6 text-3xl border-gray-900"
						type="text"
						value={user}
						onChange={(e) => setUser(e.target.value)}
						placeholder="Search for a user"
					/>
					<button
						className="text-3xl border-gray-900 bg-gray-200 py-6 px-4 border border-l-0 rounded-tr rounded-br"
						type="submit"
					>
						Search
					</button>
				</form>
				<div>
					<span className="text-3xl">
						{gitHubScore} GitHub points
					</span>
				</div>
			</main>
		</>
	);
}
